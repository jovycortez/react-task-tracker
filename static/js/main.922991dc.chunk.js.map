{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.922991dc.chunk.js","sourcesContent":["\nconst Button = ({ color, text, onClick }) => {\n   \n\n    return <button onClick={onClick} style={{ backgroundColor: color }} \n    className='btn'>{text}</button>\n}\n\nexport default Button\n","\nimport Button from './Button'\nconst Header = ({ title, onAdd, showAdd }) => {\n  \n return (\n    <header className='header'>\n        <h1>{title}</h1>\n        <Button color ={showAdd ? 'red' : 'green'} text={showAdd ? 'x' : '+'} onClick={onAdd} />\n        \n    </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\n// Header.propTypes = {\n//     title: PropTypes.string.isRequired\n// }\n\n\n// CSS in JS\n// const headingStyle = {\n//     color: 'blue', \n//     backgroundColor: 'orange'\n// }\n\nexport default Header","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? \n        'reminder': ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n                {task.text} <FaTimes style={{ color: 'red', \n                cursor: 'pointer'}} \n                onClick={() => onDelete(task.id)} \n                />\n                </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => { \n    return (\n        <>\n            {tasks.map((task) => (\n                <Task key={task.id} task={task} \n                onDelete={onDelete}\n                onToggle={onToggle}/>\n            ))}\n        </>\n    )\n}\n\nTasks.propTypes = {\n\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text) {\n            alert('Please add task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task'\n                    value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input type='text' placeholder='Add Day and Time'\n                    value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input\n                    type='checkbox'\n                    checked={reminder}\n                    value={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Task'\n                className='btn btn-block' />\n\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n      {\n          id: 1,\n          text: 'Standup Meeting',\n          day: 'Sep 16th at 9:00am',\n          reminder: true,\n      },\n      {\n          id: 2,\n          text: 'Doctors Appointment',\n          day: 'Sep 16th at 10:30am',\n          reminder: true,\n      },\n      {\n          id: 3,\n          text: 'Lunch',\n          day: 'Sep 16th at 12:00pm',\n          reminder: false,\n      },\n  ])\n// Add Task \nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n  //Delete Task\n  const deleteTask = (id) =>{\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) => {\n// ask Simmigon about this later\nsetTasks(tasks.map((task) => task.id === id\n? { ...task, reminder: !task.reminder} : task ))\n}\n  return (\n    <div className='container'>\n     <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     {showAddTask && <AddTask onAdd={addTask}/>}\n     {tasks.length > 0 ? (\n     <Tasks tasks={tasks} onDelete={deleteTask} \n     onToggle={toggleReminder} /> )\n     : ( 'No Tasks'\n     )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}